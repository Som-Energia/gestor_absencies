# Generated by Django 2.2.12 on 2020-04-16 23:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Email of the worker', max_length=255, unique=True, verbose_name='email address')),
                ('category', models.CharField(choices=[('technical', 'Tècnic'), ('specialist', 'Especialista'), ('manager', 'Gerència')], help_text='Category of the worker', max_length=50, verbose_name='Category')),
                ('holidays', models.DecimalField(decimal_places=1, default=0, help_text='Holidays that still has this worker', max_digits=4, verbose_name='Holidays')),
                ('gender', models.CharField(choices=[('male', 'Home'), ('female', 'Dona'), ('intersex', 'Intersex'), ('trans', 'Trans'), ('queer', 'Queer'), ('other', 'Altre')], help_text='Gender of the worker', max_length=50, verbose_name='Gender')),
                ('working_week', models.IntegerField(default=0, help_text='Work hours per week', verbose_name='Workday')),
                ('contract_date', models.DateTimeField(help_text='When this worker signed its contract', null=True, verbose_name='Contract date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('email',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when this object was saved', verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date when this object was modified', verbose_name='Modified date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date when object was deleted', null=True, verbose_name='Deleted at')),
                ('is_referent', models.BooleanField(default=False, help_text='Flag that indicates if this member is referring', verbose_name='Referring person in the team')),
                ('is_representant', models.BooleanField(default=False, help_text='Flag that indicates if this member is representative', verbose_name='IT representative person in the team')),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'ordering': ('is_representant', 'is_referent'),
            },
        ),
        migrations.CreateModel(
            name='SomEnergiaAbsence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when this object was saved', verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date when this object was modified', verbose_name='Modified date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date when object was deleted', null=True, verbose_name='Deleted at')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VacationPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when this object was saved', verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date when this object was modified', verbose_name='Modified date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date when object was deleted', null=True, verbose_name='Deleted at')),
                ('name', models.CharField(help_text='Name of this vacation policy', max_length=50, verbose_name='Name')),
                ('description', models.CharField(help_text='Verbose description of this vacations policy', max_length=250, verbose_name='Description')),
                ('holidays', models.IntegerField(default=0, help_text='Number of days that will have this vacacion policy', verbose_name='Holidays days')),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(help_text='User who modified the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
            ],
            options={
                'verbose_name_plural': 'Vacation policies',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when this object was saved', verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date when this object was modified', verbose_name='Modified date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date when object was deleted', null=True, verbose_name='Deleted at')),
                ('name', models.CharField(help_text='Name of the team', max_length=50, verbose_name='Name')),
                ('min_worker', models.IntegerField(default=0, help_text='Number of workers of this team', verbose_name='Min workers')),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('members', models.ManyToManyField(help_text='Actual Members of this team', related_name='teams', through='gestor_absencies.Member', to=settings.AUTH_USER_MODEL, verbose_name='Members')),
                ('updated_by', models.ForeignKey(help_text='User who modified the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='SomEnergiaOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when this object was saved', verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date when this object was modified', verbose_name='Modified date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date when object was deleted', null=True, verbose_name='Deleted at')),
                ('start_time', models.DateTimeField(help_text='Date when this occurrence end', verbose_name='Start time')),
                ('end_time', models.DateTimeField(help_text='Date when this occurrence end', verbose_name='End time')),
                ('absence', models.ForeignKey(help_text='Absence for this occurrence', on_delete=django.db.models.deletion.CASCADE, related_name='occurrence', to='gestor_absencies.SomEnergiaAbsence', verbose_name='Absence')),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(help_text='User who modified the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SomEnergiaAbsenceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date when this object was saved', verbose_name='Create date')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date when this object was modified', verbose_name='Modified date')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date when object was deleted', null=True, verbose_name='Deleted at')),
                ('name', models.CharField(help_text='Absece type name', max_length=50, unique=True, verbose_name='Name')),
                ('description', models.CharField(help_text='Absece type description', max_length=250, verbose_name='Description')),
                ('spend_days', models.IntegerField(default=0, help_text='Indicates how many days will discount or add this absence type', verbose_name='Compute days')),
                ('max_duration', models.DecimalField(decimal_places=1, default=0, help_text='Total amount of days that this absence can last', max_digits=4, verbose_name='Max duration')),
                ('min_duration', models.DecimalField(decimal_places=1, default=0, help_text='Minimal amount of days that this absence can last', max_digits=4, verbose_name='Min duration')),
                ('max_spend', models.DecimalField(decimal_places=1, default=0, help_text='Maximun of days that will compute this absence type', max_digits=4, verbose_name='Maximun computation')),
                ('min_spend', models.DecimalField(decimal_places=1, default=0, help_text='Minimun of days that will compute this absence type', max_digits=4, verbose_name='Minimun computation')),
                ('required_notify', models.BooleanField(default=True, help_text='Flag to tell if this absence requiers some kind of notification', verbose_name='Notify required')),
                ('color', models.CharField(help_text='Color of this type of absence', max_length=7, verbose_name='Color')),
                ('global_date', models.BooleanField(default=False, help_text='Check that indentify if this absence type is a global holidays', verbose_name='Global date')),
                ('created_by', models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(help_text='User who modified the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='somenergiaabsence',
            name='absence_type',
            field=models.ForeignKey(help_text='Type of this absence', on_delete=django.db.models.deletion.CASCADE, related_name='absence', to='gestor_absencies.SomEnergiaAbsenceType', verbose_name='Absence type'),
        ),
        migrations.AddField(
            model_name='somenergiaabsence',
            name='created_by',
            field=models.ForeignKey(help_text='User who created the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='somenergiaabsence',
            name='updated_by',
            field=models.ForeignKey(help_text='User who modified the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by'),
        ),
        migrations.AddField(
            model_name='somenergiaabsence',
            name='worker',
            field=models.ForeignKey(help_text='Worker that takes this absence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='absence', to=settings.AUTH_USER_MODEL, verbose_name='Worker'),
        ),
        migrations.AddField(
            model_name='member',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestor_absencies.Team'),
        ),
        migrations.AddField(
            model_name='member',
            name='updated_by',
            field=models.ForeignKey(help_text='User who modified the object', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by'),
        ),
        migrations.AddField(
            model_name='member',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='worker',
            name='vacation_policy',
            field=models.ForeignKey(help_text='What kind of vacacion policy will have this worker', null=True, on_delete=django.db.models.deletion.CASCADE, to='gestor_absencies.VacationPolicy', verbose_name='Vacation Policy'),
        ),
    ]
